import edu.wpi.first.gradlerio.GradleRIOPlugin

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id "edu.wpi.first.GradleRIO" version "2019.3.2"
}

def MAIN_CLASS = "org.team2471.frc2019.Main"

deploy {
    targets {
        roboRIO("roborio") {
            team = frc.getTeamNumber()
        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            debug = frc.getDebugOrDefault(false)
        }

        fileTreeArtifact('frcStaticFileDeploy') {
            files = fileTree(dir: 'src/main/deploy')
            targets << "roborio"
            directory = '/home/lvuser/deploy'
        }
    }
}

repositories {
    mavenCentral()
    maven { setUrl("http://first.wpi.edu/FRC/roborio/maven/release") }
    maven { setUrl("http://devsite.ctr-electronics.com/maven/release/") }
    maven { setUrl("http://maven.highcurrent.io/maven") }
}

dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.0"
    compile project("meanlib")
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    //noinspection GroovyAssignabilityCheck
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest GradleRIOPlugin.javaManifest(MAIN_CLASS)
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
